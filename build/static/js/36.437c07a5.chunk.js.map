{"version":3,"file":"static/js/36.437c07a5.chunk.js","mappings":"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","sources":["components/Admin/Forms/AddFaculty.js","components/Admin/UI/Button.js","hooks/use-http.js","hooks/use-input.js","firebase/index.js","hooks/use-upload-file.js"],"sourcesContent":["import useInput from \"../../../hooks/use-input\";\nimport useHttp from \"../../../hooks/use-http\";\nimport Button from \"../UI/Button\";\n\nimport useUploadFile from \"../../../hooks/use-upload-file\";\n\nconst AddFaculty = function () {\n  const {\n    enteredInput: enteredName,\n    reset: enteredNameReset,\n    inputChangeHandler: enteredNameChangeHandler,\n  } = useInput();\n\n  const {\n    enteredInput: enteredExpertIn,\n    reset: enteredExpertInReset,\n    inputChangeHandler: enteredExpertInChangeHandler,\n  } = useInput();\n\n  const {\n    enteredInput: enteredBathHour,\n    reset: enteredBathHourReset,\n    inputChangeHandler: enteredBathHourChangeHandler,\n  } = useInput();\n\n  const {\n    enteredInput: enteredScheduled,\n    reset: enteredScheduledReset,\n    inputChangeHandler: enteredScheduledChangeHandler,\n  } = useInput();\n\n  const {\n    enteredInput: selectedImg,\n    inputChangeHandler: selectedImgChangeHandler,\n  } = useInput();\n\n  const { sendHttp } = useHttp();\n\n  const { uploadFile: imgUploadHandler } = useUploadFile();\n\n  const addFacultyHandler = async function (e) {\n    e.preventDefault();\n    if (\n      enteredName.length === 0 &&\n      enteredBathHour.length === 0 &&\n      enteredExpertIn.length === 0 &&\n      enteredScheduled.length === 0 &&\n      selectedImg.length === 0\n    )\n      return;\n\n    const facultyImg = await imgUploadHandler(selectedImg);\n\n    await sendHttp({\n      url: \"https://innovation-coaching-centre-default-rtdb.firebaseio.com/faculties.json\",\n      method: \"POST\",\n      body: {\n        name: enteredName,\n        expertIn: enteredExpertIn,\n        batchHour: enteredBathHour,\n        scheduled: enteredScheduled,\n        img: facultyImg,\n      },\n    });\n\n    enteredBathHourReset();\n    enteredExpertInReset();\n    enteredNameReset();\n    enteredScheduledReset();\n  };\n\n  const fileInputHandler = function (e) {\n    selectedImgChangeHandler(e.target.files[0]);\n  };\n\n  return (\n    <form className=\"form__field\" onSubmit={addFacultyHandler}>\n      <h1 className=\"form__title\">New faculty</h1>\n      <div className=\"form__input-container\">\n        <label htmlFor=\"NameOfNew\" className=\"form__heading\">\n          Name of the new member\n        </label>\n        <input\n          className=\"form__input\"\n          id=\"NameOfNew\"\n          onChange={enteredNameChangeHandler}\n          value={enteredName}\n        />\n      </div>\n      <div className=\"form__input-container\">\n        <label htmlFor=\"picOfNew\" className=\"form__heading\">\n          Image of the new member\n        </label>\n        <input\n          type=\"file\"\n          className=\"form__input\"\n          id=\"picOfNew\"\n          onChange={fileInputHandler}\n        />\n      </div>\n      <div className=\"form__input-container\">\n        <label className=\"form__heading\">Details of the new member</label>\n        <ul>\n          <li>\n            <label className=\"form__heading\" htmlFor=\"exprt\">\n              Expert in:\n            </label>\n            <input\n              className=\"form__input\"\n              id=\"exprt\"\n              onChange={enteredExpertInChangeHandler}\n              value={enteredExpertIn}\n            />\n          </li>\n          <li>\n            <label className=\"form__heading\" htmlFor=\"hr\">\n              Bath hour:\n            </label>\n            <input\n              className=\"form__input\"\n              id=\"hr\"\n              onChange={enteredBathHourChangeHandler}\n              value={enteredBathHour}\n            />\n          </li>\n          <li>\n            <label className=\"form__heading\" htmlFor=\"sc\">\n              Scheduled:\n            </label>\n            <input\n              className=\"form__input\"\n              id=\"sc\"\n              onChange={enteredScheduledChangeHandler}\n              value={enteredScheduled}\n            />\n          </li>\n        </ul>\n      </div>\n      <Button type=\"submit\">Add</Button>\n    </form>\n  );\n};\n\nexport default AddFaculty;\n","import \"./Button.css\";\n\nconst Button = function (props) {\n  return (\n    <button type={props.type} className=\"btn\">\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import { useCallback } from \"react\";\n\nconst useHttp = function () {\n  const sendHttp = useCallback(async function (requestConfig) {\n    const response = await fetch(requestConfig.url, {\n      method: requestConfig.method ? requestConfig.method : \"GET\",\n      body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n    });\n    const data = await response.json();\n\n    return data;\n  }, []);\n\n  return {\n    sendHttp,\n  };\n};\n\nexport default useHttp;\n","import { useState } from \"react\";\n\nconst useInput = function () {\n  const [enteredInput, setEnteredInput] = useState(\"\");\n\n  const inputChangeHandler = function (obj) {\n    if (obj.target) setEnteredInput(obj.target.value);\n    else setEnteredInput(obj);\n  };\n\n  const reset = function () {\n    setEnteredInput(\"\");\n  };\n\n  return {\n    enteredInput,\n    reset,\n    inputChangeHandler,\n  };\n};\n\nexport default useInput;\n","import { initializeApp } from \"firebase/app\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAgSGTgeEcqX3Vvs-YDg1XqcRv072S9If4\",\n  authDomain: \"innovation-coaching-centre.firebaseapp.com\",\n  databaseURL: \"https://innovation-coaching-centre-default-rtdb.firebaseio.com\",\n  projectId: \"innovation-coaching-centre\",\n  storageBucket: \"innovation-coaching-centre.appspot.com\",\n  messagingSenderId: \"968853938646\",\n  appId: \"1:968853938646:web:93a5d1cd22d8614420c477\",\n  measurementId: \"G-0G6NDGWCYF\",\n};\n\ninitializeApp(firebaseConfig);\n","import \"../firebase/index\";\nimport {\n  getStorage,\n  getDownloadURL,\n  ref as sRef,\n  uploadBytesResumable,\n} from \"firebase/storage\";\n\nconst useUploadFile = function () {\n  const uploadFile = function (img) {\n    return new Promise(function (resolve, reject) {\n      const storage = getStorage();\n      const storageRef = sRef(storage, `images/${img.name}`);\n      const metadata = {\n        contentType: img.type,\n      };\n\n      const uploadImg = uploadBytesResumable(storageRef, img, metadata);\n      uploadImg.on(\n        \"state-changed\",\n        (snapshot) => {},\n        (error) => {\n          reject(error);\n        },\n        () => {\n          getDownloadURL(uploadImg.snapshot.ref).then((url) => {\n            resolve(url);\n          });\n        }\n      );\n    });\n  };\n\n  return { uploadFile };\n};\n\nexport default useUploadFile;\n"],"names":["useInput","enteredName","enteredInput","enteredNameReset","reset","enteredNameChangeHandler","inputChangeHandler","enteredExpertIn","enteredExpertInReset","enteredExpertInChangeHandler","enteredBathHour","enteredBathHourReset","enteredBathHourChangeHandler","enteredScheduled","enteredScheduledReset","enteredScheduledChangeHandler","selectedImg","selectedImgChangeHandler","sendHttp","useHttp","imgUploadHandler","useUploadFile","uploadFile","addFacultyHandler","e","preventDefault","length","facultyImg","url","method","body","name","expertIn","batchHour","scheduled","img","className","onSubmit","htmlFor","id","onChange","value","type","target","files","props","children","useCallback","requestConfig","fetch","JSON","stringify","response","json","data","useState","setEnteredInput","obj","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Promise","resolve","reject","storage","getStorage","storageRef","sRef","metadata","contentType","uploadImg","uploadBytesResumable","on","snapshot","error","getDownloadURL","ref","then"],"sourceRoot":""}